package com.example.lamur.exchangesstudents;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;

public class Sign_in extends AppCompatActivity {


    String nom,role;
    TextView name;
    TextView user_role;
    Fournisseur four;
    DBHelper dbhelper = DBHelper.getInstance(this);
    ListView list;
    DisponibiliteAdaptater myCustomAdapter;
    ArrayList<Service_Disponibilite> listOfValues = new ArrayList<>();

    Service_Disponibilite _serv_selected = new Service_Disponibilite();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_welcome_page);
        Intent intent = getIntent();
        Bundle extras = intent.getExtras();

        role = extras.getString("role");
        if(role.equals("Fournisseur")) {
            four = (Fournisseur) this.getIntent().getSerializableExtra("info_user");
        }

        name = (TextView) findViewById(R.id.nom_user);
        user_role = (TextView) findViewById(R.id.role_user);

        name.setText(four.get_username());
        user_role.setText(role);


        list = (ListView) findViewById(R.id.Liste_activite);



        HashMap<Integer,Service_Disponibilite>  Listhash = new HashMap<>();
        Listhash = dbhelper.servicesByUser(four.get_id());

        if(Listhash.isEmpty()) {

            listOfValues = new ArrayList<>();


            myCustomAdapter = new DisponibiliteAdaptater(Sign_in.this, listOfValues);

            list.setAdapter(myCustomAdapter);

            myCustomAdapter.updateReceiptsList(listOfValues);

            list.setOnItemClickListener(new AdapterView.OnItemClickListener(){

                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position,
                                        long id) { //This is automatically generated by the OnItemClickListener, the parameters are shown as the default name says, so we can assign the "position" in the next progress.

                    Service_Disponibilite serv = (Service_Disponibilite) myCustomAdapter.getItem(position);

                    _serv_selected = serv;

                }


            });

        }
        else
        {

            Collection<Service_Disponibilite> values = Listhash.values();

            //Creating an ArrayList of values

            listOfValues = new ArrayList<>(values);


            myCustomAdapter = new DisponibiliteAdaptater(Sign_in.this, listOfValues);

            list.setAdapter(myCustomAdapter);

            myCustomAdapter.updateReceiptsList(listOfValues);

            list.setOnItemClickListener(new AdapterView.OnItemClickListener(){

                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position,
                                        long id) { //This is automatically generated by the OnItemClickListener, the parameters are shown as the default name says, so we can assign the "position" in the next progress.

                    Service_Disponibilite serv = (Service_Disponibilite) myCustomAdapter.getItem(position);

                    _serv_selected = serv;

                }


            });

        }







    }

    @Override
    protected void onResume() {
        super.onResume();
        HashMap<Integer,Service_Disponibilite>  Listhash = new HashMap<>();
        Listhash = dbhelper.servicesByUser(four.get_id());

        if(Listhash.isEmpty()) {


            //Creating an ArrayList of values

            ArrayList<Service_Disponibilite> _new_list = new ArrayList<Service_Disponibilite>();

            myCustomAdapter.updateReceiptsList(_new_list);
        }
        else
        {


            Collection<Service_Disponibilite> values = Listhash.values();

            //Creating an ArrayList of values

            ArrayList<Service_Disponibilite> _new_list = new ArrayList<Service_Disponibilite>(values);

            myCustomAdapter.updateReceiptsList(_new_list);

        }
    }


    public void complete_profil(View view) {

        if (role.equals("Fournisseur"))
        {
            Fournisseur new_four =  new Fournisseur();
            Intent add_info = new Intent(this, Complete_Profil.class);
            Bundle extras = new Bundle();
            new_four = dbhelper.getFournisseur(four.get_username(),four.getMdp());
            extras.putSerializable("info_user",new_four);
            add_info.putExtra("role",role);
            add_info.putExtras(extras);
            startActivity(add_info);
        }

    }
    public void ajout_service(View view) {

        if (role.equals("Fournisseur"))
        {
            Fournisseur new_four =  new Fournisseur();
            Intent add_service = new Intent(this, Ajout_disponibilite.class);
            Bundle extras = new Bundle();
            new_four = dbhelper.getFournisseur(four.get_username(),four.getMdp());
            extras.putSerializable("info_user",new_four);
            add_service.putExtras(extras);
            startActivity(add_service);
            _serv_selected = new Service_Disponibilite();
        }

    }

    public void modifier_delete(View view)
    {
        if(_serv_selected.getHeure() != null || _serv_selected.getJour() != null|| _serv_selected.getNom_service() != null) {
            Intent intent = new Intent(Sign_in.this, Edit_disponibilite.class);
            intent.putExtra("Service", _serv_selected);
            startActivity(intent);
            _serv_selected = new Service_Disponibilite();
        }
    }

}
